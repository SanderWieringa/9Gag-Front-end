name: Build and Deploy React App

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: react-app
  LOGIN_SERVER: sanderwieringa.azurecr.io
  AKS_RESOURCE_GROUP: 9Gag-Backend
  AKS_CLUSTER_NAME: 9Gag-Backend
  AKS_NAMESPACE: default
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

#       - name: Build and Test
#         run: |
#           npm ci
#           npm run build
#           npm test --if-present

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build . -t ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker login sanderwieringa.azurecr.io
          docker push ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Set up Azure CLI
        uses: azure/CLI@v1

      - name: Authenticate with Azure
        run: az login --service-principal --username ${{ secrets.AZURE_SP_CLIENT_ID }} --password ${{ secrets.AZURE_SP_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_SP_TENANT_ID }}

      - name: Configure AKS credentials
        run: az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: kubectl apply -f kubernetes/deployment.yaml -n ${{ env.AKS_NAMESPACE }}
