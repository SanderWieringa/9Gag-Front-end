name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: sanderwieringa
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  AKS_RESOURCE_GROUP: 9Gag-Backend
  AKS_CLUSTER_NAME: 9Gag-Backend
  K8S_NAMESPACE: default
  K8S_DEPLOYMENT_NAME: front-end-depl

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/react-app:$GITHUB_SHA .
          docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
          docker push $DOCKER_HUB_USERNAME/react-app:$GITHUB_SHA

      - name: Zip build directory
        run: zip -r app.zip build/

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Azure Kubernetes CLI
        run: |
          az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}
          mkdir -p ~/.kube/
          cp $HOME/.azure/aksServiceAccount.yaml ~/.kube/config

      - name: Upload app.zip to AKS
        run: |
          kubectl apply -f deployment.yaml -n ${{ env.K8S_NAMESPACE }}

      - name: Unzip app.zip on AKS
        run: |
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $(kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l "app.kubernetes.io/name=${{ env.K8S_DEPLOYMENT_NAME }}" -o jsonpath="{.items[0].metadata.name}") -- sh -c 'unzip -o /app.zip -d /usr/share/nginx/html/'

      - name: Restart pods on AKS
        run: |
          kubectl rollout restart deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
